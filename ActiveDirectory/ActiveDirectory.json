{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
       "dcType": {
      "type": "string",
      "allowedValues": [
        "FirstDC",
        "AdditionalDC"
      ],
      "defaultValue": "AdditionalDC",
      "metadata": {
        "description": "Is it the first domain controller (new domain/forest) or will you be adding one?"
      }
    },
       "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "vmPrefix": {
      "type": "string",
      "metadata": {
        "description": "The prefix that will be used for the vm name"
      }
    },
    "existingVirtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing VNET"
      }
    },
    "existingVirtualNetworkResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing VNET resource group"
      }
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the subnet in the virtual network you want to use"
      }
      },
    "dscRegistrationKey": {
      "type": "string",
      "metadata": {
        "description": "Registration key to use to onboard to the Azure Automation DSC pull/reporting server"
      }
    },
    "dscRegistrationUrl": {
      "type": "string",
      "metadata": {
        "description": "Registration url of the Azure Automation DSC pull/reporting server"
      }
    }
    },
    "variables": {
      "vmName": "DC01",
      "vmFullName": "[concat(parameters('vmPrefix'),variables('vmName'))]",
      "vmSize": "Standard_A2_v2",
      "imagePublisher": "MicrosoftWindowsServer",
      "imageOffer": "WindowsServer",
      "windowsOSVersion": "2016-Datacenter",
      "OSDiskName": "[concat('disk-',variables('vmFullName'),'-os')]",
      "dataDisk1VhdName": "[concat('disk-',variables('vmFullName'),'-data01')]", 
      "storageAccountType": "Standard_LRS",      
      "apiVersion": "2015-06-15",
      "apiVersionManagedDisks": "2016-04-30-preview",
      "nicName": "[concat('nic-',variables('vmFullName'))]",
      "pipName": "[concat('pip-',variables('vmFullName'))]", 
      "vnetName": "[parameters('existingVirtualNetworkName')]",
      "vnetRG": "[parameters('existingVirtualNetworkResourceGroup')]",
      "vnetSubnet": "[parameters('subnetName')]",
      "vnetID": "[resourceId(variables('vnetRG'), 'Microsoft.Network/virtualNetworks', variables('vnetName'))]",
      "subnetRef": "[concat(variables('vnetID'),'/subnets/', variables('vnetSubnet'))]", 
      "dscLinkedTemplateUri":  "https://raw.githubusercontent.com/tvuylsteke/IaC-ADFS/master/Automation/RegisterVirtualMachine/RegisterVM.json",
      "dscRegistrationKey": "[parameters('dscRegistrationKey')]",
      "dscRegistrationUrl": "[parameters('dscRegistrationUrl')]",
      "dscNodeConfigurationName": "[concat('DscConfDomainController.',parameters('dcType'))]",
      "updateip_templateUri": "https://raw.githubusercontent.com/tvuylsteke/IaC-ADFS/master/ActiveDirectory/update-nic.json"
      },
    "resources": [
      {
      "type": "Microsoft.Compute/disks",
      "name": "[variables('dataDisk1VhdName')]",
      "apiVersion": "[variables('apiVersionManagedDisks')]",
      "location": "[resourceGroup().location]",
      "properties":
      {
        "creationData":
        {
          "createOption" : "Empty"
        },
        "accountType" : "[variables('storageAccountType')]",
        "diskSizeGB": "32"
      }
    },
    {
  "apiVersion": "2015-06-15",
  "type": "Microsoft.Network/publicIPAddresses",
  "name": "[variables('pipName')]",
  "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[resourceGroup().location]",
     "dependsOn": [
      "[concat('Microsoft.Network/publicIPAddresses/', variables('pipName'))]"
    ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('pipName'))]"
                  },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
      {
      "apiVersion": "[variables('apiVersionManagedDisks')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmFullName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]",
        "[concat('Microsoft.Compute/disks/', variables('dataDisk1VhdName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmFullName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('OSDiskName')]",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "lun": 2,
              "name": "[variables('dataDisk1VhdName')]",
              "createOption": "attach",
              "managedDisk":
              {
                "id": "[resourceId('Microsoft.Compute/disks', variables('dataDisk1VhdName'))]"
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    },
     { 
      "apiVersion": "2015-01-01", 
      "name": "linkedTemplateDscPullServer", 
      "type": "Microsoft.Resources/deployments", 
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmFullName'))]"
      ],
      "properties": { 
        "mode": "incremental", 
        "templateLink": {
          "uri": "[variables('dscLinkedTemplateUri')]",
          "contentVersion": "1.0.0.0"
        }, 
        "parameters": { 
          "vmName":{
            "value": "[variables('vmFullName')]"
          },
          "registrationKey":{
            "value": "[variables('dscRegistrationKey')]"
          },
          "registrationUrl":{
            "value": "[variables('dscRegistrationUrl')]"
          },
          "nodeConfigurationName":{
            "value": "[variables('dscNodeConfigurationName')]"
          } 
        } 
      } 
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "linkedTemplateUpdateIp",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('updateip_templateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "nicName": {
            "value": "[variables('nicName')]"
          },
          "SubnetRef": {
            "value": "[variables('SubnetRef')]"
          },
          "privateIp": {
            "value": "[reference(concat('Microsoft.Network/networkInterfaces/', variables('nicName'))).ipConfigurations[0].properties.privateIPAddress]"
          }
        }
      }
    }
    ],
    "outputs": {}
}
